<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>unity逆向il2cpp打包</title>
    <link href="/2025/05/29/unity%E9%80%86%E5%90%91il2cpp%E6%89%93%E5%8C%85/"/>
    <url>/2025/05/29/unity%E9%80%86%E5%90%91il2cpp%E6%89%93%E5%8C%85/</url>
    
    <content type="html"><![CDATA[<h1 id="unity逆向-il2cpp"><a href="#unity逆向-il2cpp" class="headerlink" title="unity逆向-il2cpp"></a>unity逆向-il2cpp</h1><h3 id="LitCTF-2025-Robbie-Wanna-Revenge"><a href="#LitCTF-2025-Robbie-Wanna-Revenge" class="headerlink" title="LitCTF 2025-Robbie Wanna Revenge"></a>LitCTF 2025-Robbie Wanna Revenge</h3><p>il2cpp打包的unity游戏题，在网上搜了文章，</p><p>根据晓梦的文章<a href="https://xz.aliyun.com/news/15811">https://xz.aliyun.com/news/15811</a></p><p>和swdd的文章<a href="https://blog.csdn.net/qq_24481913/article/details/148234091?sharetype=blogdetail&sharerId=148234091&sharerefer=PC&sharesource=qq_24481913&spm=1011.2480.3001.8118">https://blog.csdn.net/qq_24481913/article/details/148234091?sharetype=blogdetail&amp;sharerId=148234091&amp;sharerefer=PC&amp;sharesource=qq_24481913&amp;spm=1011.2480.3001.8118</a></p><p>利用ilcppdumper提取il2cpp等文件，这是il2cppdumper下载的网址<a href="https://github.com/Perfare/Il2CppDumper/">https://github.com/Perfare/Il2CppDumper/</a></p><p>在终端输入命令 <code>.\Il2CppDumper.exe 文件名.dll 文件名.dat output</code>，dll文件就是GameAssembly.dll</p><p><img src="https://cdn.jsdelivr.net/gh/J1NXEM-o/picture-bed@image/image/202505291128040.png" alt="image-20250528233715951"></p><p>直接运行命令发现报错，识别不到，再看dll文件，加了壳</p><p><img src="https://cdn.jsdelivr.net/gh/J1NXEM-o/picture-bed@image/image/202505291144110.png" alt="image-20250528213639891"></p><p>还修改了特征码，用010改回来之后再脱壳</p><p><img src="https://cdn.jsdelivr.net/gh/J1NXEM-o/picture-bed@image/image/202505291147990.png" alt="image-20250528223136275"></p><p>脱壳之后再运行命令。就成功dump了</p><p><img src="https://cdn.jsdelivr.net/gh/J1NXEM-o/picture-bed@image/image/202505291147004.png" alt="image-20250528223115942"></p><p>这就是dump出来的文件</p><p><img src="https://cdn.jsdelivr.net/gh/J1NXEM-o/picture-bed@image/image/202505291522063.png" alt="image-20250528234206707"></p><p>用dnspy查看Assembly-CSharp.dll（来自dump后的文件中）的内容，找到playerhealth函数的内容，这里面主要是通过playerdied来判断角色是否死亡，</p><p><img src="https://cdn.jsdelivr.net/gh/J1NXEM-o/picture-bed@image/image/202505291523692.png" alt="image-20250528225350874"></p><p>用ida打开脱壳后的GameAssembly.dll文件，再附加文件，左上角file&#x2F;script file，附加ida_with_struct_py3.py和script.json文件，然后再加上il2cpp.h文件</p><p>等到加载完成之后，找到对应的playerhealth函数的位置，看汇编，找到对应位置，把下面的jnz改为jmp（强跳转）</p><p>ps：这里强跳转就是 把jnz对应的机器码0F 85改为jmp的机器码90 E9</p><p><img src="https://cdn.jsdelivr.net/gh/J1NXEM-o/picture-bed@image/image/202505291523443.png" alt="image-20250528225834456"></p><p>修改成功之后就是这样，然后patch保存之后再重新运行游戏就是无敌状态了</p><p><img src="https://cdn.jsdelivr.net/gh/J1NXEM-o/picture-bed@image/image/202505291147003.png" alt="image-20250528231357969"></p>]]></content>
    
    
    
  </entry>
  
  
  
  
  
  
</search>
